{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\src\\\\page\\\\product\\\\category\\\\index.js\";\nimport React, { Component } from 'react';\n\nclass EditableTable extends Component {\n  textChange(e, record) {\n    let rows = [...this.state.data];\n    let row = rows.find(item => item.key == record.key);\n\n    if (row) {\n      row.displayName = e.target.value;\n    }\n\n    console.log('rows', rows);\n    this.setState({\n      data: rows\n    });\n  }\n\n  constructor(props) {\n    super(props); //全部数据\n\n    this.state = {\n      data: [{\n        key: '1',\n        property: '属性1',\n        displayName: '显示名称1',\n        sortable: true,\n        dataFormat: '{0}%',\n        displayStyle: \"default\",\n        displayOrder: 1,\n        fontStyle: 'lightBlue'\n      }, {\n        key: '2',\n        property: '属性2',\n        displayName: '显示名称2',\n        sortable: false,\n        dataFormat: '{0}%',\n        displayStyle: \"default\",\n        displayOrder: 2,\n        fontStyle: 'lightBlue'\n      }, {\n        key: '3',\n        property: '属性3',\n        displayName: '显示名称3',\n        sortable: false,\n        dataFormat: '{0}%',\n        displayStyle: \"default\",\n        displayOrder: 3,\n        fontStyle: 'lightBlue'\n      }],\n      //正在编辑数据的缓存以便取消动作\n      editCacheData: [{\n        key: '1',\n        property: '属性1',\n        displayName: '显示名称1',\n        sortable: true,\n        dataFormat: '{0}%',\n        displayStyle: \"default\",\n        displayOrder: 1,\n        fontStyle: 'lightBlue'\n      }, {\n        key: '2',\n        property: '属性2',\n        displayName: '显示名称2',\n        sortable: false,\n        dataFormat: '{0}%',\n        displayStyle: \"default\",\n        displayOrder: 2,\n        fontStyle: 'lightBlue'\n      }]\n    };\n    this.columns = [{\n      title: '属性/列',\n      dataIndex: 'property'\n    }, {\n      title: '显示名称',\n      dataIndex: 'displayName',\n      render: (text, record) => {\n        if (this.state.editCacheData.find(item => item.key == record.key)) {\n          //编辑状态\n          return React.createElement(_Input, {\n            value: text,\n            onChange: e => {\n              this.textChange(e, record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          });\n        }\n\n        return text;\n      }\n    }, {\n      title: '是否排序',\n      dataIndex: 'sortable',\n      render: (checked, record) => {\n        if (this.state.editCacheData.find(item => item.key == record.key)) {\n          //编辑状态\n          return React.createElement(_Checkbox, {\n            checked: checked,\n            onChange: e => {\n              this.checkedChange(e, record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          });\n        }\n\n        return checked.toString();\n      }\n    }, {\n      title: '数据格式',\n      dataIndex: 'dataFormat'\n    }, {\n      title: '显示样式',\n      dataIndex: 'displayStyle'\n    }, {\n      title: '显示顺序',\n      dataIndex: 'displayOrder'\n    }, {\n      title: '字体样式',\n      dataIndex: 'fontStyle'\n    }, {\n      title: '操作',\n      key: 'action',\n      render: (text, record) => {\n        if (this.state.editCacheData.find(item => item.key == record.key)) {\n          //编辑状态\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => {\n              this.okToDisplay(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"\\u66F4\\u65B0\"), React.createElement(\"span\", {\n            className: \"ant-divider\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            onClick: () => {\n              this.cancelToDisplay(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \"\\u53D6\\u6D88\"));\n        } //普通状态\n\n\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: () => {\n            this.changeToEdit(record);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"\\u7F16\\u8F91\"));\n      }\n    }];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      columns: this.columns,\n      dataSource: this.state.data,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EditableTable;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\react\\nec\\src\\page\\product\\category\\index.js"],"names":["React","Component","EditableTable","textChange","e","record","rows","state","data","row","find","item","key","displayName","target","value","console","log","setState","constructor","props","property","sortable","dataFormat","displayStyle","displayOrder","fontStyle","editCacheData","columns","title","dataIndex","render","text","checked","checkedChange","toString","okToDisplay","cancelToDisplay","changeToEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Input, Checkbox, Popconfirm, Form } from 'antd';\r\n\r\n\r\nclass EditableTable extends Component {\r\n  textChange(e, record) {\r\n    let rows = [...this.state.data];\r\n    let row = rows.find(item => item.key == record.key);\r\n    if (row) {\r\n      row.displayName = e.target.value;\r\n    }\r\n    console.log('rows', rows);\r\n    this.setState({\r\n      data: rows\r\n    })\r\n  }\r\nconstructor(props) {\r\n  super(props);\r\n\r\n  //全部数据\r\n  this.state = {\r\n    data: [{\r\n      key: '1',\r\n      property: '属性1',\r\n      displayName: '显示名称1',\r\n      sortable: true,\r\n      dataFormat: '{0}%',\r\n      displayStyle: \"default\",\r\n      displayOrder: 1,\r\n      fontStyle: 'lightBlue'\r\n    }, {\r\n      key: '2',\r\n      property: '属性2',\r\n      displayName: '显示名称2',\r\n      sortable: false,\r\n      dataFormat: '{0}%',\r\n      displayStyle: \"default\",\r\n      displayOrder: 2,\r\n      fontStyle: 'lightBlue'\r\n    }, {\r\n      key: '3',\r\n      property: '属性3',\r\n      displayName: '显示名称3',\r\n      sortable: false,\r\n      dataFormat: '{0}%',\r\n      displayStyle: \"default\",\r\n      displayOrder: 3,\r\n      fontStyle: 'lightBlue'\r\n    }],\r\n    //正在编辑数据的缓存以便取消动作\r\n    editCacheData: [{\r\n      key: '1',\r\n      property: '属性1',\r\n      displayName: '显示名称1',\r\n      sortable: true,\r\n      dataFormat: '{0}%',\r\n      displayStyle: \"default\",\r\n      displayOrder: 1,\r\n      fontStyle: 'lightBlue'\r\n    }, {\r\n      key: '2',\r\n      property: '属性2',\r\n      displayName: '显示名称2',\r\n      sortable: false,\r\n      dataFormat: '{0}%',\r\n      displayStyle: \"default\",\r\n      displayOrder: 2,\r\n      fontStyle: 'lightBlue'\r\n    }]\r\n  }\r\n\r\n\r\n  this.columns = [{\r\n    title: '属性/列',\r\n    dataIndex: 'property',\r\n  }, {\r\n    title: '显示名称',\r\n    dataIndex: 'displayName',\r\n    render: (text, record) => {\r\n      if (this.state.editCacheData.find(item => item.key == record.key)) {\r\n        //编辑状态\r\n        return <Input value={text} onChange={(e) => { this.textChange(e, record) }} />\r\n      }\r\n      return text\r\n    }\r\n  }, {\r\n    title: '是否排序',\r\n    dataIndex: 'sortable',\r\n    render: (checked, record) => {\r\n      if (this.state.editCacheData.find(item => item.key == record.key)) {\r\n        //编辑状态\r\n        return <Checkbox checked={checked} onChange={(e) => { this.checkedChange(e, record) }} />\r\n      }\r\n      return checked.toString();\r\n    }\r\n  }, {\r\n    title: '数据格式',\r\n    dataIndex: 'dataFormat',\r\n  }, {\r\n    title: '显示样式',\r\n    dataIndex: 'displayStyle',\r\n  }, {\r\n    title: '显示顺序',\r\n    dataIndex: 'displayOrder',\r\n  }, {\r\n    title: '字体样式',\r\n    dataIndex: 'fontStyle',\r\n  }, {\r\n    title: '操作',\r\n    key: 'action',\r\n    render: (text, record) => {\r\n\r\n      if (this.state.editCacheData.find(item => item.key == record.key)) {\r\n        //编辑状态\r\n        return <span>\r\n          <a onClick={() => { this.okToDisplay(record) }}>更新</a>\r\n          <span className=\"ant-divider\" />\r\n          <a onClick={() => { this.cancelToDisplay(record) }}>取消</a>\r\n        </span>\r\n      }\r\n      //普通状态\r\n      return <span>\r\n        <a onClick={() => { this.changeToEdit(record) }}>编辑</a>\r\n      </span>\r\n    }\r\n  }];\r\n\r\n\r\n}\r\n\r\nrender(){\r\n  return (\r\n    <div>\r\n      <Table columns={this.columns} dataSource={this.state.data} pagination={false} />\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default EditableTable;"]},"metadata":{},"sourceType":"module"}