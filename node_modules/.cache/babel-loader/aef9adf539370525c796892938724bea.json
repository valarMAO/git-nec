{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport _objectSpread from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\src\\\\page\\\\user\\\\index.js\";\nimport React, { Component } from 'react';\nimport axios from '../../axios/index';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: true,\n  render: name => \"\".concat(name.first, \" \").concat(name.last),\n  width: '20%'\n}, {\n  title: 'Gender',\n  dataIndex: 'gender',\n  filters: [{\n    text: 'Male',\n    value: 'male'\n  }, {\n    text: 'Female',\n    value: 'female'\n  }],\n  width: '20%'\n}, {\n  title: 'Email',\n  dataIndex: 'email'\n}];\n\nclass User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      pagination: {},\n      loading: false\n    };\n\n    this.request = () => {\n      axios.ajax({\n        url: '/api/user',\n        data: {\n          params: {\n            pege: 1\n          }\n        }\n      }).then(res => {\n        if (res.status == 0) {\n          this.setState({\n            data: res\n          });\n        }\n      });\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      const pager = _objectSpread({}, this.state.pagination);\n\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager\n      });\n      this.fetch(_objectSpread({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order\n      }, filters));\n    };\n  }\n\n  componentDidMount() {\n    this.request();\n  }\n\n  render() {\n    return React.createElement(_Table, {\n      columns: columns,\n      rowKey: record => record.login.uuid,\n      dataSource: this.state.data,\n      pagination: this.state.pagination,\n      loading: this.state.loading,\n      onChange: this.handleTableChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\react\\nec\\src\\page\\user\\index.js"],"names":["React","Component","axios","columns","title","dataIndex","sorter","render","name","first","last","width","filters","text","value","User","state","data","pagination","loading","request","ajax","url","params","pege","then","res","status","setState","handleTableChange","pager","current","fetch","results","pageSize","page","sortField","field","sortOrder","order","componentDidMount","record","login","uuid"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,MAAM,EAAE,IAHV;AAIEC,EAAAA,MAAM,EAAEC,IAAI,cAAOA,IAAI,CAACC,KAAZ,cAAqBD,IAAI,CAACE,IAA1B,CAJd;AAKEC,EAAAA,KAAK,EAAE;AALT,CADc,EAQd;AACEP,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,SAAS,EAAE,QAFb;AAGEO,EAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAAD,EAAkC;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAlC,CAHX;AAIEH,EAAAA,KAAK,EAAE;AAJT,CARc,EAcd;AACEP,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAdc,CAAhB;;AAoBA,MAAMU,IAAN,SAAmBd,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3Be,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADmB;;AAAA,SAW3BC,OAX2B,GAWjB,MAAI;AACZlB,MAAAA,KAAK,CAACmB,IAAN,CAAW;AACTC,QAAAA,GAAG,EAAE,WADI;AAETL,QAAAA,IAAI,EAAC;AACHM,UAAAA,MAAM,EAAE;AACNC,YAAAA,IAAI,EAAE;AADA;AADL;AAFI,OAAX,EAOGC,IAPH,CAOSC,GAAD,IAAO;AACb,YAAGA,GAAG,CAACC,MAAJ,IAAc,CAAjB,EAAmB;AACjB,eAAKC,QAAL,CAAc;AACZX,YAAAA,IAAI,EAACS;AADO,WAAd;AAGD;AACF,OAbD;AAcD,KA1B0B;;AAAA,SA4B3BG,iBA5B2B,GA4BP,CAACX,UAAD,EAAaN,OAAb,EAAsBN,MAAtB,KAAiC;AACnD,YAAMwB,KAAK,qBAAQ,KAAKd,KAAL,CAAWE,UAAnB,CAAX;;AACAY,MAAAA,KAAK,CAACC,OAAN,GAAgBb,UAAU,CAACa,OAA3B;AACA,WAAKH,QAAL,CAAc;AACZV,QAAAA,UAAU,EAAEY;AADA,OAAd;AAGA,WAAKE,KAAL;AACEC,QAAAA,OAAO,EAAEf,UAAU,CAACgB,QADtB;AAEEC,QAAAA,IAAI,EAAEjB,UAAU,CAACa,OAFnB;AAGEK,QAAAA,SAAS,EAAE9B,MAAM,CAAC+B,KAHpB;AAIEC,QAAAA,SAAS,EAAEhC,MAAM,CAACiC;AAJpB,SAKK3B,OALL;AAOD,KAzC0B;AAAA;;AAO3B4B,EAAAA,iBAAiB,GAAG;AAClB,SAAKpB,OAAL;AACD;;AAmCDb,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,OAAO,EAAEJ,OADX;AAEE,MAAA,MAAM,EAAEsC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,IAFjC;AAGE,MAAA,UAAU,EAAE,KAAK3B,KAAL,CAAWC,IAHzB;AAIE,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAJzB;AAKE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OALtB;AAME,MAAA,QAAQ,EAAE,KAAKU,iBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAvD0B;;AA0D7B,eAAed,IAAf","sourcesContent":["import React,{ Component } from 'react';\r\nimport { Table } from 'antd';\r\nimport axios from '../../axios/index';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    sorter: true,\r\n    render: name => `${name.first} ${name.last}`,\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Gender',\r\n    dataIndex: 'gender',\r\n    filters: [{ text: 'Male', value: 'male' }, { text: 'Female', value: 'female' }],\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Email',\r\n    dataIndex: 'email',\r\n  },\r\n];\r\n\r\nclass User extends Component {\r\n  state = {\r\n    data: [],\r\n    pagination: {},\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.request();\r\n  }\r\n\r\n  request = ()=>{\r\n    axios.ajax({\r\n      url: '/api/user',\r\n      data:{\r\n        params: {\r\n          pege: 1\r\n        }\r\n      }\r\n    }).then((res)=>{\r\n      if(res.status == 0){\r\n        this.setState({\r\n          data:res\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const pager = { ...this.state.pagination };\r\n    pager.current = pagination.current;\r\n    this.setState({\r\n      pagination: pager,\r\n    });\r\n    this.fetch({\r\n      results: pagination.pageSize,\r\n      page: pagination.current,\r\n      sortField: sorter.field,\r\n      sortOrder: sorter.order,\r\n      ...filters,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        rowKey={record => record.login.uuid}\r\n        dataSource={this.state.data}\r\n        pagination={this.state.pagination}\r\n        loading={this.state.loading}\r\n        onChange={this.handleTableChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}