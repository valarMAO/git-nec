{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\src\\\\page\\\\product\\\\category\\\\index.js\";\nimport React, { Component } from 'react';\n\nclass EditableTable extends Component {\n  textChange(e, record) {\n    let rows = [...this.state.data];\n    let row = rows.find(item => item.key == record.key);\n\n    if (row) {\n      row.displayName = e.target.value;\n    }\n\n    console.log('rows', rows);\n    this.setState({\n      data: rows\n    });\n  }\n\n  okToDisplay(record) {\n    let cacheData = [...this.state.editCacheData];\n    let index = cacheData.findIndex((e, i, a) => e.key === record.key);\n    cacheData.splice(index, 1);\n    this.setState({\n      editCacheData: cacheData\n    });\n  }\n\n  cancelToDisplay(record) {\n    let tableData = [...this.state.data];\n    let cacheData = [...this.state.editCacheData];\n    let row = tableData.find(item => item.key == record.key);\n\n    if (row) {\n      let editRow = cacheData.find(item => item.key == record.key);\n\n      if (editRow) {\n        row.key = editRow.key;\n        row.property = editRow.property;\n        row.displayName = editRow.displayName;\n        row.sortable = editRow.sortable;\n        row.dataFormat = editRow.dataFormat;\n        row.displayStyle = editRow.displayStyle;\n        row.displayOrder = editRow.displayOrder;\n        row.fontStyle = editRow.fontStyle;\n      }\n    }\n  }\n\n  changeToEdit(record) {\n    let cacheData = [...this.state.editCacheData];\n    cacheData.push({\n      key: record.key,\n      property: record.property,\n      displayName: record.displayName,\n      sortable: record.sortable,\n      dataFormat: record.dataFormat,\n      displayStyle: record.displayStyle,\n      displayOrder: record.displayOrder,\n      fontStyle: record.fontStyle\n    });\n    this.setState({\n      editCacheData: cacheData\n    });\n  }\n\n  constructor(props) {\n    super(props); //全部数据\n\n    this.state = {\n      data: [{\n        key: '1',\n        property: '属性1',\n        displayName: '显示名称1'\n      }, {\n        key: '2',\n        property: '属性2',\n        displayName: '显示名称2'\n      }, {\n        key: '3',\n        property: '属性3',\n        displayName: '显示名称3'\n      }],\n      //正在编辑数据的缓存以便取消动作\n      editCacheData: [{\n        key: '1',\n        property: '属性1',\n        displayName: '显示名称1'\n      }, {\n        key: '2',\n        property: '属性2',\n        displayName: '显示名称2'\n      }]\n    };\n    this.columns = [{\n      title: '品类ID',\n      dataIndex: 'property'\n    }, {\n      title: '品类名称',\n      dataIndex: 'displayName',\n      witch: '20%',\n      render: (text, record) => {\n        if (this.state.editCacheData.find(item => item.key == record.key)) {\n          //编辑状态\n          return React.createElement(_Input, {\n            value: text,\n            onChange: e => {\n              this.textChange(e, record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          });\n        }\n\n        return text;\n      }\n    }, {\n      title: '操作',\n      key: 'action',\n      render: (text, record) => {\n        if (this.state.editCacheData.find(item => item.key == record.key)) {\n          //编辑状态\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => {\n              this.okToDisplay(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"\\u66F4\\u65B0\"), React.createElement(\"span\", {\n            className: \"ant-divider\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            onClick: () => {\n              this.cancelToDisplay(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \"\\u53D6\\u6D88\"));\n        } //普通状态\n\n\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: () => {\n            this.changeToEdit(record);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"\\u7F16\\u8F91\"));\n      }\n    }];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      columns: this.columns,\n      dataSource: this.state.data,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EditableTable;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\react\\nec\\src\\page\\product\\category\\index.js"],"names":["React","Component","EditableTable","textChange","e","record","rows","state","data","row","find","item","key","displayName","target","value","console","log","setState","okToDisplay","cacheData","editCacheData","index","findIndex","i","a","splice","cancelToDisplay","tableData","editRow","property","sortable","dataFormat","displayStyle","displayOrder","fontStyle","changeToEdit","push","constructor","props","columns","title","dataIndex","witch","render","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Input, Checkbox, Popconfirm, Form } from 'antd';\r\n\r\n\r\nclass EditableTable extends Component {\r\n  textChange(e, record) {\r\n    let rows = [...this.state.data];\r\n    let row = rows.find(item => item.key == record.key);\r\n    if (row) {\r\n      row.displayName = e.target.value;\r\n    }\r\n    console.log('rows', rows);\r\n    this.setState({\r\n      data: rows\r\n    })\r\n  }\r\n  okToDisplay(record) {\r\n    let cacheData = [...this.state.editCacheData];\r\n    let index = cacheData.findIndex((e, i, a)=>e.key === record.key);\r\n    cacheData.splice(index, 1);\r\n    this.setState({\r\n        editCacheData: cacheData\r\n    });\r\n}\r\ncancelToDisplay(record) {\r\n\r\n  let tableData = [...this.state.data];\r\n  let cacheData = [...this.state.editCacheData];\r\n\r\n  let row = tableData.find(item=>item.key == record.key);\r\n  if (row) {\r\n      let editRow = cacheData.find(item=>item.key == record.key);\r\n      if (editRow) {\r\n          row.key = editRow.key;\r\n          row.property = editRow.property;\r\n          row.displayName = editRow.displayName;\r\n          row.sortable = editRow.sortable;\r\n          row.dataFormat = editRow.dataFormat;\r\n          row.displayStyle = editRow.displayStyle;\r\n          row.displayOrder = editRow.displayOrder;\r\n          row.fontStyle = editRow.fontStyle;\r\n      }\r\n  }\r\n}\r\nchangeToEdit(record) {\r\n\r\n  let cacheData = [...this.state.editCacheData];\r\n  cacheData.push({\r\n      key: record.key,\r\n      property: record.property,\r\n      displayName: record.displayName,\r\n      sortable: record.sortable,\r\n      dataFormat: record.dataFormat,\r\n      displayStyle: record.displayStyle,\r\n      displayOrder: record.displayOrder,\r\n      fontStyle: record.fontStyle\r\n  })\r\n  this.setState({\r\n      editCacheData: cacheData\r\n  });\r\n}\r\n\r\nconstructor(props) {\r\n  super(props);\r\n\r\n  //全部数据\r\n  this.state = {\r\n    data: [{\r\n      key: '1',\r\n      property: '属性1',\r\n      displayName: '显示名称1'\r\n    }, {\r\n      key: '2',\r\n      property: '属性2',\r\n      displayName: '显示名称2'\r\n    }, {\r\n      key: '3',\r\n      property: '属性3',\r\n      displayName: '显示名称3'\r\n    }],\r\n    //正在编辑数据的缓存以便取消动作\r\n    editCacheData: [{\r\n      key: '1',\r\n      property: '属性1',\r\n      displayName: '显示名称1'\r\n    }, {\r\n      key: '2',\r\n      property: '属性2',\r\n      displayName: '显示名称2'\r\n    }]\r\n  }\r\n\r\n\r\n  this.columns = [{\r\n    title: '品类ID',\r\n    dataIndex: 'property',\r\n  }, {\r\n    title: '品类名称',\r\n    dataIndex: 'displayName',\r\n    witch: '20%',\r\n    render: (text, record) => {\r\n      if (this.state.editCacheData.find(item => item.key == record.key)) {\r\n        //编辑状态\r\n        return <Input value={text} onChange={(e) => { this.textChange(e, record) }} />\r\n      }\r\n      return text\r\n    }\r\n  },{\r\n    title: '操作',\r\n    key: 'action',\r\n    render: (text, record) => {\r\n\r\n      if (this.state.editCacheData.find(item => item.key == record.key)) {\r\n        //编辑状态\r\n        return <span>\r\n          <a onClick={() => { this.okToDisplay(record) }}>更新</a>\r\n          <span className=\"ant-divider\" />\r\n          <a onClick={() => { this.cancelToDisplay(record) }}>取消</a>\r\n        </span>\r\n      }\r\n      //普通状态\r\n      return <span>\r\n        <a onClick={() => { this.changeToEdit(record) }}>编辑</a>\r\n      </span>\r\n    }\r\n  }];\r\n\r\n\r\n}\r\n\r\nrender(){\r\n  return (\r\n    <div>\r\n      <Table columns={this.columns} dataSource={this.state.data} pagination={false} />\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default EditableTable;"]},"metadata":{},"sourceType":"module"}