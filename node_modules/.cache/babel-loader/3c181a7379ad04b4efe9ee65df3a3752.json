{"ast":null,"code":"import \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input-number/style/css\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\src\\\\page\\\\product\\\\index\\\\save.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst Option = _Select.Option;\n\nclass ProductSave extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.normFile = e => {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      data: ''\n    };\n  }\n\n  componentDidMount() {\n    this.loadProduct();\n  }\n\n  loadProduct() {\n    if (this.state.id) {\n      axios.get('/api/save.json?id=' + this.state.id).then(res => {\n        let data = res.data;\n        console.log(data);\n\n        if (data.success == true) {\n          this.setState({\n            data: data.data\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 14\n      }\n    };\n    return React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(_Form.Item, Object.assign({\n      label: \"\\u5546\\u54C1\\u540D\\u79F0\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u540D\\u79F0\",\n      value: this.state.data.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(_Form.Item, Object.assign({\n      label: \"\\u5546\\u54C1\\u63CF\\u8FF0\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u63CF\\u8FF0\",\n      value: this.state.data.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"\\u5546\\u54C1\\u4EF7\\u683C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, getFieldDecorator('mon-number', {\n      initialValue: this.state.data.price\n    })(React.createElement(_InputNumber, {\n      min: 0,\n      max: 9999999,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ant-form-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \\u5143\")), React.createElement(_Form.Item, {\n      label: \"\\u5546\\u54C1\\u5E93\\u5B58\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, getFieldDecorator('input-number', {\n      initialValue: this.state.data.number\n    })(React.createElement(_InputNumber, {\n      min: 0,\n      max: 9999999,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ant-form-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \\u4EF6\")), React.createElement(_Form.Item, {\n      label: \"\\u56FE\\u7247\\u4E0A\\u4F20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, getFieldDecorator('upload', {\n      valuePropName: 'setFieldsValue',\n      getValueFromEvent: this.normFile\n    })(React.createElement(_Upload, {\n      name: \"logo\",\n      action: \"/upload.do\",\n      listType: \"picture\",\n      className: \"upload-list-inline\",\n      fileList: this.state.data.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \" Click to upload\")))), React.createElement(_Form.Item, {\n      wrapperCol: {\n        span: 12,\n        offset: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst WrappedProductSave = _Form.create()(ProductSave);\n\nexport default WrappedProductSave;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\react\\nec\\src\\page\\product\\index\\save.js"],"names":["React","Component","axios","Option","ProductSave","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","normFile","Array","isArray","fileList","state","id","match","params","data","componentDidMount","loadProduct","get","then","res","success","setState","catch","render","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","name","details","initialValue","price","number","valuePropName","getValueFromEvent","image","offset","WrappedProductSave","create"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;MAKQC,M,WAAAA,M;;AAER,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAyBnBC,YAzBmB,GAyBJC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWI,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC9C,YAAI,CAACD,GAAL,EAAU;AACXE,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACE;AACF,OAJD;AAKE,KAhCgB;;AAAA,SAiCnBG,QAjCmB,GAiCRR,CAAC,IAAI;AACfM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,CAA7B;;AACA,UAAIS,KAAK,CAACC,OAAN,CAAcV,CAAd,CAAJ,EAAsB;AACpB,eAAOA,CAAP;AACD;;AACD,aAAOA,CAAC,IAAIA,CAAC,CAACW,QAAd;AACE,KAvCgB;;AAElB,SAAKC,KAAL,GAAa;AACZC,MAAAA,EAAE,EAAE,KAAKf,KAAL,CAAWgB,KAAX,CAAiBC,MAAjB,CAAwBF,EADhB;AAEZG,MAAAA,IAAI,EAAE;AAFM,KAAb;AAIA;;AACDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,WAAL;AACA;;AACDA,EAAAA,WAAW,GAAG;AACb,QAAG,KAAKN,KAAL,CAAWC,EAAd,EAAkB;AACjBnB,MAAAA,KAAK,CAACyB,GAAN,CAAU,uBAAqB,KAAKP,KAAL,CAAWC,EAA1C,EAA8CO,IAA9C,CAAoDC,GAAD,IAAO;AACzD,YAAIL,IAAI,GAAGK,GAAG,CAACL,IAAf;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;;AACA,YAAGA,IAAI,CAACM,OAAL,IAAc,IAAjB,EAAsB;AACrB,eAAKC,QAAL,CAAc;AACbP,YAAAA,IAAI,EAAEA,IAAI,CAACA;AADE,WAAd;AAGA;AACD,OARD,EAQGQ,KARH,CAQUpB,GAAD,IAAO;AACfE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,OAVD;AAWA;AACD;;AAgBDqB,EAAAA,MAAM,GAAG;AAAA,UACAC,iBADA,GACsB,KAAK5B,KAAL,CAAWI,IADjC,CACAwB,iBADA;AAER,UAAMC,cAAc,GAAG;AACvBC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADa;AAEvBC,MAAAA,UAAU,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFW,KAAvB;AAIA,WACC,6CAAUF,cAAV;AAA0B,MAAA,QAAQ,EAAE,KAAK5B,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACC,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,OAA4B4B,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACC;AAAO,MAAA,WAAW,EAAC,4CAAnB;AAA6B,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWI,IAAX,CAAgBe,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,EAIC,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,OAA4BJ,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACC;AAAO,MAAA,WAAW,EAAC,4CAAnB;AAA6B,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWI,IAAX,CAAgBgB,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJD,EAOC,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCN,iBAAiB,CAAC,YAAD,EAAe;AAAEO,MAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWI,IAAX,CAAgBkB;AAAhC,KAAf,CAAjB,CAAyE;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,GAAG,EAAE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzE,CADD,EAEA;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CAPD,EAWC,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCR,iBAAiB,CAAC,cAAD,EAAiB;AAAEO,MAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWI,IAAX,CAAgBmB;AAAhC,KAAjB,CAAjB,CAA4E;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,GAAG,EAAE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5E,CADD,EAEA;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CAXD,EAgBC,0BAAM,IAAN;AAAW,MAAA,KAAK,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCT,iBAAiB,CAAC,QAAD,EAAW;AAC5BU,MAAAA,aAAa,EAAE,gBADa;AAE5BC,MAAAA,iBAAiB,EAAE,KAAK7B;AAFI,KAAX,CAAjB,CAIA;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,MAAM,EAAC,YAA3B;AAAwC,MAAA,QAAQ,EAAC,SAAjD;AAA2D,MAAA,SAAS,EAAC,oBAArE;AAA0F,MAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWI,IAAX,CAAgBsB,KAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,qBADA,CAJA,CADD,CAhBD,EA4BC,0BAAM,IAAN;AAAW,MAAA,UAAU,EAAE;AAAET,QAAAA,IAAI,EAAE,EAAR;AAAYU,QAAAA,MAAM,EAAE;AAApB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CA5BD,CADD;AAoCA;;AAnFkC;;AAsFpC,MAAMC,kBAAkB,GAAG,MAAKC,MAAL,GAAc7C,WAAd,CAA3B;;AAEA,eAAe4C,kBAAf","sourcesContent":["import React,{ Component } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n\tForm, Select,Input, InputNumber, Button, Upload, Icon\r\n  } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nclass ProductSave extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tid: this.props.match.params.id,\r\n\t\t\tdata: ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.loadProduct();\r\n\t}\r\n\tloadProduct() {\r\n\t\tif(this.state.id) {\r\n\t\t\taxios.get('/api/save.json?id='+this.state.id).then((res)=>{\r\n\t\t\t\tlet data = res.data;\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tif(data.success==true){\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata: data.data\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}).catch((err)=>{\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFields((err, values) => {\r\n\t\t  if (!err) {\r\n\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t  }\r\n\t\t});\r\n\t  };\r\n\tnormFile = e => {\r\n\t\tconsole.log('Upload event:', e);\r\n\t\tif (Array.isArray(e)) {\r\n\t\t  return e;\r\n\t\t}\r\n\t\treturn e && e.fileList;\r\n\t  };\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\tconst formItemLayout = {\r\n\t\tlabelCol: { span: 6 },\r\n\t\twrapperCol: { span: 14 },\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item label=\"商品名称\" {...formItemLayout}>\r\n\t\t\t\t\t<Input placeholder=\"请输入商品名称\" value={this.state.data.name} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item label=\"商品描述\" {...formItemLayout}>\r\n\t\t\t\t\t<Input placeholder=\"请输入商品描述\" value={this.state.data.details}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item label=\"商品价格\">\r\n\t\t\t\t{getFieldDecorator('mon-number', { initialValue: this.state.data.price })(<InputNumber min={0} max={9999999} />)}\r\n\t\t\t\t<span className=\"ant-form-text\"> 元</span>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item label=\"商品库存\">\r\n\t\t\t\t{getFieldDecorator('input-number', { initialValue: this.state.data.number })(<InputNumber min={0} max={9999999} />)}\r\n\t\t\t\t<span className=\"ant-form-text\"> 件</span>\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item label=\"图片上传\">\r\n\t\t\t\t{getFieldDecorator('upload', {\r\n\t\t\t\t\tvaluePropName: 'setFieldsValue',\r\n\t\t\t\t\tgetValueFromEvent: this.normFile,\r\n\t\t\t\t})(\r\n\t\t\t\t\t<Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\" className='upload-list-inline' fileList={this.state.data.image}>\r\n\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t<Icon type=\"upload\" /> Click to upload\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Upload>,\r\n\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n      \t\t</Form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst WrappedProductSave = Form.create()(ProductSave);\r\n\r\nexport default WrappedProductSave;"]},"metadata":{},"sourceType":"module"}