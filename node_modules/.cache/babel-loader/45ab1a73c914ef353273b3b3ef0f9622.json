{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport _objectSpread from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\src\\\\page\\\\user\\\\index.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: true,\n  render: name => \"\".concat(name.first, \" \").concat(name.last),\n  width: '20%'\n}, {\n  title: 'Gender',\n  dataIndex: 'gender',\n  filters: [{\n    text: 'Male',\n    value: 'male'\n  }, {\n    text: 'Female',\n    value: 'female'\n  }],\n  width: '20%'\n}, {\n  title: 'Email',\n  dataIndex: 'email'\n}];\n\nclass User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      pagination: {},\n      loading: false\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      const pager = _objectSpread({}, this.state.pagination);\n\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager\n      });\n      this.fetch(_objectSpread({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order\n      }, filters));\n    };\n\n    this.fetch = (params = {}) => {\n      console.log('params:', params);\n      this.setState({\n        loading: true\n      });\n      axios.get('https://randomuser.me/api', {\n        params: {\n          results: 10\n        }\n      }).then(res => {\n        let data = res.data;\n        console.log(data);\n\n        const pagination = _objectSpread({}, this.state.pagination);\n\n        pagination.total = 200;\n        this.setState({\n          loading: false,\n          data: data.results,\n          pagination\n        });\n      }).catch(() => {\n        console.log('error');\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  render() {\n    return React.createElement(_Table, {\n      columns: columns,\n      rowKey: record => record.login.uuid,\n      dataSource: this.state.data,\n      pagination: this.state.pagination,\n      loading: this.state.loading,\n      onChange: this.handleTableChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\react\\nec\\src\\page\\user\\index.js"],"names":["React","Component","axios","columns","title","dataIndex","sorter","render","name","first","last","width","filters","text","value","User","state","data","pagination","loading","handleTableChange","pager","current","setState","fetch","results","pageSize","page","sortField","field","sortOrder","order","params","console","log","get","then","res","total","catch","componentDidMount","record","login","uuid"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\r\nimport { Table } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    sorter: true,\r\n    render: name => `${name.first} ${name.last}`,\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Gender',\r\n    dataIndex: 'gender',\r\n    filters: [{ text: 'Male', value: 'male' }, { text: 'Female', value: 'female' }],\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Email',\r\n    dataIndex: 'email',\r\n  },\r\n];\r\n\r\nclass User extends Component {\r\n  state = {\r\n    data: [],\r\n    pagination: {},\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetch();\r\n  }\r\n\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const pager = { ...this.state.pagination };\r\n    pager.current = pagination.current;\r\n    this.setState({\r\n      pagination: pager,\r\n    });\r\n    this.fetch({\r\n      results: pagination.pageSize,\r\n      page: pagination.current,\r\n      sortField: sorter.field,\r\n      sortOrder: sorter.order,\r\n      ...filters,\r\n    });\r\n  };\r\n\r\n  fetch = (params = {}) => {\r\n    console.log('params:', params);\r\n\tthis.setState({ loading: true });\r\n\taxios.get('https://randomuser.me/api',{\r\n\t\tparams: {\r\n\t\t\tresults: 10\r\n\t\t}\r\n\t}).then((res)=>{\r\n\t\tlet data = res.data;\r\n\t\tconsole.log(data)\r\n\t\tconst pagination = { ...this.state.pagination };\r\n\t\tpagination.total = 200;\r\n\t\tthis.setState({\r\n\t\t\tloading: false,\r\n\t\t\tdata: data.results,\r\n\t\t\tpagination\r\n\t\t})\r\n\t}).catch(()=>{\r\n\t\tconsole.log('error')\r\n\t})\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        rowKey={record => record.login.uuid}\r\n        dataSource={this.state.data}\r\n        pagination={this.state.pagination}\r\n        loading={this.state.loading}\r\n        onChange={this.handleTableChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}