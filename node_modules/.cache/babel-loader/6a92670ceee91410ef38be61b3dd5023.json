{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\src\\\\router\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass AuthorizedRoute extends Component {\n  render() {\n    const _this$props = this.props,\n          Component = _this$props.component,\n          rest = _objectWithoutProperties(_this$props, [\"component\"]);\n\n    const isLogged = this.props.loginStatus != null ? true : false;\n    console.log(isLogged);\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: props => {\n        return isLogged ? React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapState = state => ({\n  loginStatus: state.login.get('login')\n});\n\nexport default connect(mapState, null)(AuthorizedRoute);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\react\\nec\\src\\router\\index.js"],"names":["React","Component","Route","Redirect","connect","AuthorizedRoute","render","props","component","rest","isLogged","loginStatus","console","log","mapState","state","login","get"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AACpCK,EAAAA,MAAM,GAAG;AAAA,wBACqC,KAAKC,KAD1C;AAAA,UACcN,SADd,eACGO,SADH;AAAA,UAC4BC,IAD5B;;AAEX,UAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWI,WAAX,IAA0B,IAA1B,GAAiC,IAAjC,GAAwC,KAAzD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACM,WACQ,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,MAAA,MAAM,EAAEF,KAAK,IAAI;AAC9B,eAAOG,QAAQ,GACJ,oBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADI,GAEL,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFV;AAGH,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADR;AAOH;;AAZmC;;AAexC,MAAMO,QAAQ,GAAIC,KAAD,KAAY;AAC5BJ,EAAAA,WAAW,EAAEI,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,OAAhB;AADe,CAAZ,CAAjB;;AAIA,eAAeb,OAAO,CAACU,QAAD,EAAU,IAAV,CAAP,CAAuBT,eAAvB,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nclass AuthorizedRoute extends Component {\r\n    render() {\r\n        const { component: Component, ...rest } = this.props;\r\n\t\tconst isLogged = this.props.loginStatus != null ? true : false;\r\n\t\tconsole.log(isLogged);\r\n        return (\r\n                <Route {...rest} render={props => {\r\n                    return isLogged\r\n                            ?  <Component {...props} />\r\n                            : <Redirect to=\"/login\" />\r\n                }} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState = (state) => ({\r\n\tloginStatus: state.login.get('login')\r\n})\r\n\r\nexport default connect(mapState,null)(AuthorizedRoute);"]},"metadata":{},"sourceType":"module"}