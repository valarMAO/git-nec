{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\nec\\\\src\\\\page\\\\product\\\\category\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from '../../../axios/index';\n\nclass categoryList extends Component {\n  componentDidMount() {\n    this.request();\n  }\n\n  textChange(e, record) {\n    let rows = [...this.state.data];\n    let row = rows.find(item => item.key === record.key);\n\n    if (row) {\n      row.displayName = e.target.value;\n    }\n\n    console.log('rows', rows);\n    this.setState({\n      data: rows\n    });\n  }\n\n  okToDisplay(record) {\n    let cacheData = [...this.state.editCacheData];\n    let index = cacheData.findIndex((e, i, a) => e.key === record.key);\n    cacheData.splice(index, 1);\n    this.setState({\n      editCacheData: cacheData\n    });\n  }\n\n  cancelToDisplay(record) {\n    let tableData = [...this.state.data];\n    let cacheData = [...this.state.editCacheData];\n    let row = tableData.find(item => item.key === record.key);\n\n    if (row) {\n      let editRow = cacheData.find(item => item.key === record.key);\n\n      if (editRow) {\n        row.key = editRow.key;\n        row.property = editRow.property;\n        row.displayName = editRow.displayName;\n        row.sortable = editRow.sortable;\n        row.dataFormat = editRow.dataFormat;\n        row.displayStyle = editRow.displayStyle;\n        row.displayOrder = editRow.displayOrder;\n        row.fontStyle = editRow.fontStyle;\n      }\n    }\n  }\n\n  changeToEdit(record) {\n    let cacheData = [...this.state.editCacheData];\n    cacheData.push({\n      key: record.key,\n      property: record.property,\n      displayName: record.displayName\n    });\n    this.setState({\n      editCacheData: cacheData\n    });\n  }\n\n  constructor(props) {\n    super(props); //全部数据\n\n    this.request = () => {\n      axios.ajax({\n        url: '/categoryList'\n      }).then(res => {\n        if (res.status == 0) {\n          this.setState({\n            data: res.data\n          });\n        }\n      });\n    };\n\n    this.state = {\n      data: [],\n      //正在编辑数据的缓存以便取消动作\n      editCacheData: []\n    };\n    this.columns = [{\n      title: '品类ID',\n      dataIndex: 'key'\n    }, {\n      title: '品类名称',\n      dataIndex: 'categoryfirst',\n      width: 688,\n      render: (text, record) => {\n        if (this.state.editCacheData.find(item => item.key === record.key)) {\n          //编辑状态\n          return React.createElement(_Input, {\n            value: text,\n            style: {\n              width: 250\n            },\n            onChange: e => {\n              this.textChange(e, record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          });\n        }\n\n        return text;\n      }\n    }, {\n      title: '操作',\n      key: 'action',\n      width: 203,\n      render: (text, record) => {\n        if (this.state.editCacheData.find(item => item.key === record.key)) {\n          //编辑状态\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => {\n              this.okToDisplay(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, \"\\u66F4\\u65B0\"), React.createElement(\"span\", {\n            className: \"ant-divider\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            onClick: () => {\n              this.cancelToDisplay(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \"\\u53D6\\u6D88\"));\n        } //普通状态\n\n\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: () => {\n            this.changeToEdit(record);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"\\u7F16\\u8F91\"));\n      }\n    }];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/admin/product-category/add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\\u6DFB\\u52A0\\u54C1\\u7C7B\")), React.createElement(_Table, {\n      columns: this.columns,\n      dataSource: this.state.data,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default categoryList;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\react\\nec\\src\\page\\product\\category\\index.js"],"names":["React","Component","Link","axios","categoryList","componentDidMount","request","textChange","e","record","rows","state","data","row","find","item","key","displayName","target","value","console","log","setState","okToDisplay","cacheData","editCacheData","index","findIndex","i","a","splice","cancelToDisplay","tableData","editRow","property","sortable","dataFormat","displayStyle","displayOrder","fontStyle","changeToEdit","push","constructor","props","ajax","url","then","res","status","columns","title","dataIndex","width","render","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from '../../../axios/index';\r\nimport { Table, Input, Button } from 'antd';\r\n\r\n\r\nclass categoryList extends Component {\r\n  componentDidMount() {\r\n    this.request();\r\n  }\r\n\r\n  request = ()=>{\r\n    axios.ajax({\r\n      url: '/categoryList'\r\n    }).then((res)=>{\r\n      if(res.status == 0){\r\n        this.setState({\r\n          data:res.data\r\n        })\r\n      }\r\n    })\r\n  }\r\n  textChange(e, record) {\r\n    let rows = [...this.state.data];\r\n    let row = rows.find(item => item.key === record.key);\r\n    if (row) {\r\n      row.displayName = e.target.value;\r\n    }\r\n    console.log('rows', rows);\r\n    this.setState({\r\n      data: rows\r\n    })\r\n  }\r\n  okToDisplay(record) {\r\n    let cacheData = [...this.state.editCacheData];\r\n    let index = cacheData.findIndex((e, i, a)=>e.key === record.key);\r\n    cacheData.splice(index, 1);\r\n    this.setState({\r\n        editCacheData: cacheData\r\n    });\r\n}\r\ncancelToDisplay(record) {\r\n\r\n  let tableData = [...this.state.data];\r\n  let cacheData = [...this.state.editCacheData];\r\n\r\n  let row = tableData.find(item=>item.key === record.key);\r\n  if (row) {\r\n      let editRow = cacheData.find(item=>item.key === record.key);\r\n      if (editRow) {\r\n          row.key = editRow.key;\r\n          row.property = editRow.property;\r\n          row.displayName = editRow.displayName;\r\n          row.sortable = editRow.sortable;\r\n          row.dataFormat = editRow.dataFormat;\r\n          row.displayStyle = editRow.displayStyle;\r\n          row.displayOrder = editRow.displayOrder;\r\n          row.fontStyle = editRow.fontStyle;\r\n      }\r\n  }\r\n}\r\nchangeToEdit(record) {\r\n  let cacheData = [...this.state.editCacheData];\r\n  cacheData.push({\r\n      key: record.key,\r\n      property: record.property,\r\n      displayName: record.displayName\r\n  })\r\n  this.setState({\r\n      editCacheData: cacheData\r\n  });\r\n}\r\n\r\nconstructor(props) {\r\n  super(props);\r\n\r\n  //全部数据\r\n  this.state = {\r\n    data: [],\r\n    //正在编辑数据的缓存以便取消动作\r\n    editCacheData: []\r\n  }\r\n\r\n\r\n  this.columns = [{\r\n    title: '品类ID',\r\n    dataIndex: 'key',\r\n  }, {\r\n    title: '品类名称',\r\n    dataIndex: 'categoryfirst',\r\n    width: 688,\r\n    render: (text, record) => {\r\n      if (this.state.editCacheData.find(item => item.key === record.key)) {\r\n        //编辑状态\r\n        return <Input value={text} style={{ width: 250 }} onChange={(e) => { this.textChange(e, record) }} />\r\n      }\r\n      return text\r\n    }\r\n  },{\r\n    title: '操作',\r\n    key: 'action',\r\n    width: 203,\r\n    render: (text, record) => {\r\n\r\n      if (this.state.editCacheData.find(item => item.key === record.key)) {\r\n        //编辑状态\r\n        return <span>\r\n          <a onClick={() => { this.okToDisplay(record) }}>更新</a>\r\n          <span className=\"ant-divider\" />\r\n          <a onClick={() => { this.cancelToDisplay(record) }}>取消</a>\r\n        </span>\r\n      }\r\n      //普通状态\r\n      return <span>\r\n        <a onClick={() => { this.changeToEdit(record) }}>编辑</a>\r\n      </span>\r\n    }\r\n  }];\r\n\r\n\r\n}\r\n\r\nrender(){\r\n  return (\r\n    <div>\r\n      <Button><Link to='/admin/product-category/add'>添加品类</Link></Button>\r\n      <Table columns={this.columns} dataSource={this.state.data} pagination={false} />\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default categoryList;"]},"metadata":{},"sourceType":"module"}